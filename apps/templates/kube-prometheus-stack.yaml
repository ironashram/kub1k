apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
  labels:
    app.m1k.cloud/cluster: kub1k
    app.m1k.cloud/source: upstream
spec:
  project: default
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
    automated:
      prune: true
      selfHeal: true
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 67.4.0
    helm:
      values: |
        alertmanager:
          ingress:
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-prod
            enabled: true
            ingressClassName: nginx
            hosts:
            - alertmanager.lab.m1k.cloud
            tls:
             - secretName: alertmanager-cert
               hosts:
               - alertmanager.lab.m1k.cloud

        grafana:
          #defaultDashboardsEnabled: false
          #forceDeployDashboards: true
          admin:
            existingSecret: grafana-admin
            userKey: admin-user
            passwordKey: admin-password
          ingress:
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-prod
            enabled: true
            ingressClassName: nginx
            hosts:
            - grafana.lab.m1k.cloud
            tls:
             - secretName: grafana-cert
               hosts:
               - grafana.lab.m1k.cloud
          serviceMonitor:
            labels:
              release: kube-prometheus-stack
          #dashboardProviders:
          #  dashboardproviders.yaml:
          #    apiVersion: 1
          #    providers:
          #    - name: 'default'
          #      orgId: 1
          #      folder: ''
          #      type: file
          #      disableDeletion: false
          #      editable: true
          #      options:
          #        path: /var/lib/grafana/dashboards/default
              #- name: 'custom-grafana-dashboards'
              #  orgId: 1
              #  folder: ''
              #  type: file
              #  disableDeletion: true
              #  editable: true
              #  options:
              #    path: /var/lib/grafana/dashboards/custom-grafana-dashboards
          #dashboards:
          #  custom-grafana-dashboards:
          #    k8s-system-api-server:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/k8s-system-api-server.json
          #    k8s-system-coredns:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/k8s-system-coredns.json
          #    k8s-views-global:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/k8s-views-global.json
          #    k8s-views-namespaces:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/k8s-views-namespaces.json
          #    k8s-views-nodes:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/k8s-views-nodes.json
          #    k8s-views-pods:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/k8s-views-pods.json
          #    alertmanager-overview:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/alertmanager-overview.json
          #    coredns:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/coredns.json
          #    etcd:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/etcd.json
          #    grafana-overview:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/grafana-overview.json
          #    kube-apiserver:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/kube-apiserver.json
          #    kube-compute-resources-cluster:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/kube-compute-resources-cluster.json
          #    kube-compute-resources-multi-cluster:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/kube-compute-resources-multi-cluster.json
          #    kube-compute-resources-namespace-pods:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/kube-compute-resources-namespace-pods.json
          #    kube-compute-resources-namespace-workloads:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/kube-compute-resources-namespace-workloads.json
          #    kube-compute-resources-node-pods:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/kube-compute-resources-node-pods.json
          #    kube-compute-resources-pod:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/kube-compute-resources-pod.json
          #    kube-compute-resources-workload:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/kube-compute-resources-workload.json
          #    kube-controller-manager:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/kube-controller-manager.json
          #    kubelet:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/kubelet.json
          #    kube-proxy:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/kube-proxy.json
          #    kube-scheduler:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/kube-scheduler.json
          #    kube-networking-cluster:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/kube-networking-cluster.json
          #    kube-networking-namespace-pods:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/kube-networking-namespace-pods.json
          #    kube-networking-namespace-workloads:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/kube-networking-namespace-workloads.json
          #    kube-networking-pod:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/kube-networking-pod.json
          #    kube-networking-workload:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/kube-networking-workload.json
          #    node-exporter-nodes:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/node-exporter-nodes.json
          #    node-exporter-methods-cluster:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/node-exporter-methods-cluster.json
          #    node-exporter-methods-node:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/node-exporter-methods-node.json
          #    persistent-volumes:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/persistent-volumes.json
          #    prometheus-overview:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/prometheus-overview.json
          #    trivy-operator-vulnerabilities:
          #      url: https://raw.githubusercontent.com/ironashram/kub1k/main/dashboards/trivy-operator-vulnerabilities.json

        prometheus:
          serviceMonitor:
            relabelings:
              - action: replace
                targetLabel: cluster
                replacement: prometheus
          ingress:
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-prod
            enabled: true
            ingressClassName: nginx
            hosts:
            - prometheus.lab.m1k.cloud
            tls:
             - secretName: prometheus-cert
               hosts:
               - prometheus.lab.m1k.cloud
          prometheusSpec:
            serviceMonitorSelectorNilUsesHelmValues: false
            serviceMonitorNamespaceSelector:
              matchExpressions:
              - key: kubernetes.io/metadata.name
                operator: Exists
            retention: 45d
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: synology-csi-default
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 50Gi

        prometheusOperator:
          tls:
            enabled: false
          admissionWebhooks:
            enabled: false
            failurePolicy: Ignore

        kubeApiServer:
          serviceMonitor:
            metricRelabelings:
              - sourceLabels: [ "__name__" ]
                regex: "(apiserver|workqueue|rest_client|process|go)_(.+)"
                action: keep

        kubelet:
          serviceMonitor:
            metricRelabelings:
              - sourceLabels: [ "__name__" ]
                regex: "(kubelet|storage|rest_client|process|go)_(.+)"
                action: keep

        kubeEtcd:
          endpoints:
            - 10.0.0.241
          service:
            enabled: true
            port: 2381
            targetPort: 2381
          serviceMonitor:
            metricRelabelings:
              - sourceLabels: [ "__name__" ]
                regex: "(etcd|grpc|rest_client|process|go)_(.+)"
                action: keep

        kubeProxy:
          endpoints:
            - 10.0.0.241
          service:
            enabled: true
            port: 10249
            targetPort: 10249
          serviceMonitor:
            metricRelabelings:
              - sourceLabels: [ "__name__" ]
                regex: "(kubeproxy|rest_client|process|go)_(.+)"
                action: keep

        kubeControllerManager:
          endpoints:
            - 10.0.0.241
          service:
            enabled: true
            port: 10257
            targetPort: 10257
          serviceMonitor:
            metricRelabelings:
              - sourceLabels: [ "__name__" ]
                regex: "(workqueue|rest_client|process|go)_(.+)"
                action: keep

        kubeScheduler:
          endpoints:
            - 10.0.0.241
          service:
            enabled: true
            port: 10259
            targetPort: 10259
          serviceMonitor:
            metricRelabelings:
              - sourceLabels: ["__name__"]
                regex: "(scheduler|rest_client|process|go)_(.+)"
                action: keep

  ignoreDifferences:
    - group: "apps"
      kind: "Deployment"
      jqPathExpressions:
        - .spec.template.spec.containers[].resources
        - .spec.template.spec.initContainers[].resources
    - group: "apps"
      kind: "DaemonSet"
      jqPathExpressions:
        - .spec.template.spec.containers[].resources
  destination:
    name: in-cluster
    namespace: monitoring
