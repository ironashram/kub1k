apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
spec:
  project: default
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
    automated:
      prune: true
      selfHeal: true
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 56.21.4
    helm:
      values: |
        alertmanager:
          ingress:
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-prod
            enabled: true
            ingressClassName: nginx
            hosts:
            - alertmanager.lab.m1k.cloud
            tls:
             - secretName: alertmanager-cert
               hosts:
               - alertmanager.lab.m1k.cloud
        grafana:
          admin:
            existingSecret: grafana-admin
            userKey: admin-user
            passwordKey: admin-password
          ingress:
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-prod
            enabled: true
            ingressClassName: nginx
            hosts:
            - grafana.lab.m1k.cloud
            tls:
             - secretName: grafana-cert
               hosts:
               - grafana.lab.m1k.cloud
          serviceMonitor:
            labels:
              release: kube-prometheus-stack
        prometheus:
          serviceMonitor:
            relabelings:
              - action: replace
                targetLabel: cluster
                replacement: prometheus
          ingress:
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-prod
            enabled: true
            ingressClassName: nginx
            hosts:
            - prometheus.lab.m1k.cloud
            tls:
             - secretName: prometheus-cert
               hosts:
               - prometheus.lab.m1k.cloud
          prometheusSpec:
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: synology-csi-default
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 50Gi

        prometheusOperator:
          admissionWebhooks:
            patch:
              enabled:
                false

        kubeApiServer:
          serviceMonitor:
            metricRelabelings:
              - action: drop
                regex: (apiserver_request_duration_seconds_bucket|apiserver_request_body_size_bytes_bucket|apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket|apiserver_request_sli_duration_seconds_bucket)
                sourceLabels: [__name__]
              - action: drop
                regex: "etcd_request_duration_seconds_bucket"
                sourceLabels: [__name__]
              - action: drop
                regex: (scheduler_plugin_execution_duration_seconds_bucket)
                sourceLabels: [__name__]
              - action: drop
                regex: (workqueue_work_duration_seconds_bucket)
                sourceLabels: [__name__]

        kubelet:
          serviceMonitor:
            cAdvisorRelabelings:
              - action: replace
                sourceLabels: [__metrics_path__]
                targetLabel: metrics_path
              - action: replace
                targetLabel: instance
                sourceLabels:
                  - "node"
            relabelings:
              - action: replace
                sourceLabels: [__metrics_path__]
                targetLabel: metrics_path
              - action: replace
                sourceLabels: [__address__]
                targetLabel: instance
                replacement: kub1k-kubelet
            metricRelabelings:
              - action: drop
                regex: (apiserver_request_duration_seconds_bucket|apiserver_request_body_size_bytes_bucket|apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket|apiserver_request_sli_duration_seconds_bucket)
                sourceLabels: [__name__]
              - action: drop
                regex: "etcd_request_duration_seconds_bucket"
                sourceLabels: [__name__]
              - action: drop
                regex: (scheduler_plugin_execution_duration_seconds_bucket)
                sourceLabels: [__name__]
              - action: drop
                regex: (workqueue_work_duration_seconds_bucket)
                sourceLabels: [__name__]
              - action: drop
                regex: "kubelet_node_name"
                sourceLabels: [__name__]

        kubeControllerManager:
          endpoints:
            - 10.0.0.241
          service:
            enabled: true
            port: 10257
            targetPort: 10257
          serviceMonitor:
            https: true
            insecureSkipVerify: true
            metricRelabelings:
              - action: drop
                regex: (apiserver_request_duration_seconds_bucket|apiserver_request_body_size_bytes_bucket|apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket|apiserver_request_sli_duration_seconds_bucket)
                sourceLabels: [__name__]
              - action: drop
                regex: "etcd_request_duration_seconds_bucket"
                sourceLabels: [__name__]
              - action: drop
                regex: (scheduler_plugin_execution_duration_seconds_bucket)
                sourceLabels: [__name__]
              - action: drop
                regex: (workqueue_work_duration_seconds_bucket)
                sourceLabels: [__name__]

        kubeEtcd:
          endpoints:
            - 10.0.0.241
          service:
            enabled: true
            port: 2381
            targetPort: 2381
          serviceMonitor:
            metricRelabelings:
              - action: drop
                regex: (apiserver_request_duration_seconds_bucket|apiserver_request_body_size_bytes_bucket|apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket|apiserver_request_sli_duration_seconds_bucket)
                sourceLabels: [__name__]
              - action: drop
                regex: "etcd_request_duration_seconds_bucket"
                sourceLabels: [__name__]
              - action: drop
                regex: (scheduler_plugin_execution_duration_seconds_bucket)
                sourceLabels: [__name__]
              - action: drop
                regex: (workqueue_work_duration_seconds_bucket)
                sourceLabels: [__name__]

        kubeScheduler:
          endpoints:
            - 10.0.0.241
          service:
            enabled: true
            port: 10259
            targetPort: 10259
          serviceMonitor:
            https: true
            insecureSkipVerify: true
            metricRelabelings:
              - action: drop
                regex: (apiserver_request_duration_seconds_bucket|apiserver_request_body_size_bytes_bucket|apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket|apiserver_request_sli_duration_seconds_bucket)
                sourceLabels: [__name__]
              - action: drop
                regex: "etcd_request_duration_seconds_bucket"
                sourceLabels: [__name__]
              - action: drop
                regex: (scheduler_plugin_execution_duration_seconds_bucket)
                sourceLabels: [__name__]
              - action: drop
                regex: (workqueue_work_duration_seconds_bucket)
                sourceLabels: [__name__]

        kubeProxy:
          endpoints:
            - 10.0.0.241
          service:
            enabled: true
            port: 10249
            targetPort: 10249
            selector:
              k8s-app: kube-proxy
          serviceMonitor:
            metricRelabelings:
              - action: drop
                regex: (apiserver_request_duration_seconds_bucket|apiserver_request_body_size_bytes_bucket|apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket|apiserver_request_sli_duration_seconds_bucket)
                sourceLabels: [__name__]
              - action: drop
                regex: "etcd_request_duration_seconds_bucket"
                sourceLabels: [__name__]
              - action: drop
                regex: (scheduler_plugin_execution_duration_seconds_bucket)
                sourceLabels: [__name__]
              - action: drop
                regex: (workqueue_work_duration_seconds_bucket)
                sourceLabels: [__name__]

        coreDns:
          serviceMonitor:
            metricRelabelings:
              - action: drop
                regex: (apiserver_request_duration_seconds_bucket|apiserver_request_body_size_bytes_bucket|apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket|apiserver_request_sli_duration_seconds_bucket)
                sourceLabels: [__name__]
              - action: drop
                regex: "etcd_request_duration_seconds_bucket"
                sourceLabels: [__name__]
              - action: drop
                regex: (scheduler_plugin_execution_duration_seconds_bucket)
                sourceLabels: [__name__]
              - action: drop
                regex: (workqueue_work_duration_seconds_bucket)
                sourceLabels: [__name__]

        kubeDns:
          serviceMonitor:
            metricRelabelings:
              - action: drop
                regex: (apiserver_request_duration_seconds_bucket|apiserver_request_body_size_bytes_bucket|apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket|apiserver_request_sli_duration_seconds_bucket)
                sourceLabels: [__name__]
              - action: drop
                regex: "etcd_request_duration_seconds_bucket"
                sourceLabels: [__name__]
              - action: drop
                regex: (scheduler_plugin_execution_duration_seconds_bucket)
                sourceLabels: [__name__]
              - action: drop
                regex: (workqueue_work_duration_seconds_bucket)
                sourceLabels: [__name__]

        kube-state-metrics:
          prometheus:
            monitor:
              relabelings:
                - action: replace
                  targetLabel: "instance"
                  sourceLabels:
                    - "__meta_kubernetes_pod_node_name"

        prometheus-node-exporter:
          prometheus:
            monitor:
              relabelings:
                - action: replace
                  targetLabel: "instance"
                  sourceLabels:
                    - "__meta_kubernetes_pod_node_name"

  destination:
    name: in-cluster
    namespace: monitoring
